---
import { Icon } from 'astro-icon';
import { SITE } from '~/config.mjs';

export interface Props {
  label?: string;
  class?: string;
  iconClass?: string;
  iconSun?: string;
  iconMoon?: string;
}

const {
  label = 'Toggle between Dark and Light mode',
  class:
    className = 'text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center',
  iconClass = 'w-6 h-6',
  iconSun = 'tabler:sun',
  iconMoon = 'tabler:moon'
} = Astro.props;
---

{
  !(SITE?.defaultTheme && SITE.defaultTheme.endsWith(':only')) && (
    <button type="button" style="display:none" class={className} aria-label={label} data-aw-toggle-color-light-scheme>
      <Icon name={(iconSun)} class={iconClass} />
    </button>
    <button type="button" style="display:none" class={className} aria-label={label} data-aw-toggle-color-dark-scheme>
      <Icon name={(iconMoon)} class={iconClass} />
    </button>
  )
}

<script is:inline define:vars={{ defaultTheme: SITE.defaultTheme }}>
  const iconLight = document.querySelectorAll('[data-aw-toggle-color-light-scheme]');
  const iconDark = document.querySelectorAll('[data-aw-toggle-color-dark-scheme]');

  if (defaultTheme && defaultTheme.endsWith(':only')) {
    toggleTheme.remove();
  } else {
      const isDark = document.documentElement.classList.contains('dark');
      console.log(iconDark[0]);

      if(isDark)
        iconDark.forEach(icon => icon.style.display = "block")
      else
        iconLight.forEach(icon => icon.style.display = "block");

  }
</script>